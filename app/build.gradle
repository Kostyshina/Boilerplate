apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply plugin: 'spoon'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.2"
    defaultConfig {
        applicationId "com.andersenlab.boilerplate"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

spoon {
    if (project.hasProperty('spoonClassName')){
        className = project.spoonClassName
    }
    // To run a single test class
    //className = 'com.andersenlab.boilerplate.ImageListScreenTest'

    // To execute the tests device by device */
    sequential = false
}

ext {
    supportLibraryVersion = '27.0.2'
    supportLibraryTestVersion = '1.0.1'
    espressoVersion = '3.0.1'
    playServicesVersion = '9.2.1'
    retrofitVersion = '2.3.0'
    butterKnifeVersion = '8.8.1'
    glideVersion = '4.3.1'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestImplementation "com.android.support:support-annotations:$supportLibraryVersion"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "com.android.support.test:runner:$supportLibraryTestVersion"
    androidTestImplementation "com.android.support.test:rules:$supportLibraryTestVersion"
    androidTestImplementation 'com.google.code.findbugs:jsr305:3.0.2'

    // JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional
    testImplementation 'org.mockito:mockito-core:2.12.0'
    testImplementation 'org.robolectric:robolectric:3.5.1'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // Retrofit & OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
    //implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion"
    implementation("com.github.bumptech.glide:recyclerview-integration:$glideVersion") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
}
